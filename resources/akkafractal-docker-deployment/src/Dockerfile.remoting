FROM microsoft/dotnet:2.2-sdk AS builder

WORKDIR /app
COPY ./Akka.Fractal.Remote/Akka.Fractal.Remote.fsproj ./Akka.Fractal.Remote/Akka.Fractal.Remote.fsproj
COPY ./Akka.Fractal.Common/Akka.Fractal.Common.fsproj ./Akka.Fractal.Common/Akka.Fractal.Common.fsproj
COPY ./build.sh  ./build.sh 
COPY ./paket.lock  ./paket.lock
COPY ./paket.dependencies  ./paket.dependencies
RUN ./build.sh 
COPY ./.paket/Paket.Restore.targets  ./.paket/Paket.Restore.targets

RUN dotnet restore ./Akka.Fractal.Common/Akka.Fractal.Common.fsproj # --verbosity quiet
RUN dotnet restore ./Akka.Fractal.Remote/Akka.Fractal.Remote.fsproj # --verbosity quiet 

WORKDIR ./Akka.Fractal.Remote/
RUN dotnet restore
WORKDIR /app

# Copy all source code to image.
COPY ./Akka.Fractal.Remote ./Akka.Fractal.Remote
COPY ./Akka.Fractal.Common ./Akka.Fractal.Common

WORKDIR ./Akka.Fractal.Remote/
RUN dotnet build Akka.Fractal.Remote.fsproj -c Release
RUN dotnet publish Akka.Fractal.Remote.fsproj -c Release -o publish


# Install Petabridge.Cmd client
RUN dotnet tool install --global pbm 
# Needed because https://stackoverflow.com/questions/51977474/install-dotnet-core-tool-dockerfile
ENV PATH="${PATH}:/root/.dotnet/tools"


FROM microsoft/dotnet:2.2-sdk AS runner
WORKDIR /app

COPY --from=builder /app/Akka.Fractal.Remote/publish/ .

EXPOSE 8090

CMD ["dotnet", "Akka.Fractal.Remote.dll"]

#######################

# BUILD
# docker build -f Dockerfile.Prod -t rik/test1 .

# RUN
# docker run -p 8090:8090 -i rik/test1